---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-system

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.4.2-debian-elasticsearch-1.1
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch.elk.svc.cluster.local"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          - name: FLUENT_UID
            value: '0'
          - name: FLUENTD_SYSTEMD_CONF
            value: 'disable'
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /fluentd/etc/fluent.conf
          readOnly: true
        - name: kubeconfig
          mountPath: /fluentd/etc/kubernetes.conf
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        nfs:
          server: 172.16.0.114
          path: /sweep/service_logs
      - name: varlibdockercontainers
        configMap:
          name: fluentd-config
      - name: kubeconfig
        configMap:
          name: fluentd-config

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: fluentd-config
#   namespace: kube-system
#   labels:
#     k8s-app: fluentd-logging
#     version: v1
#     kubernetes.io/cluster-service: "true"
# data:
#   fluent.conf: |
#     @include kubernetes.conf
#     @include kubernetes2.conf
#     <match fluent.**>
#         # this tells fluentd to not output its log on stdout
#         @type null
#     </match>
#     # here we read the logs from Docker's containers and parse them
#     <source>
#       @type tail
#       path /var/log/auth/*.log, /var/log/discovery/*.log,/var/log/response/*.log, /var/log/survey/*.log, /var/log/gateway/*.log, /var/log/config/*.log 
#       pos_file /var/log/formduo-service.log.pos
#       tag formduo.service
#       # <parse>
#       #   @type json
#       #   time_format %Y-%m-%dT%H:%M:%S.%NZ
#       # </parse>
#     </source>

#     </match>
#      # we send the logs to Elasticsearch
#     <match formduo.*>
#        @type elasticsearch
#        @id out_es
#        @log_level info
#        include_tag_key true
#        host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
#        port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
#        user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
#        password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
#        scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
#        ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
#        reload_connections true
#        logstash_format true
#        logstash_prefix ${record['kubernetes']['pod_name']}
#        <buffer>
#            @type file
#            path /var/log/fluentd-buffers/kubernetes.system.buffer
#            flush_mode interval
#            retry_type exponential_backoff
#            flush_thread_count 2
#            flush_interval 5s
#            retry_forever true
#            retry_max_interval 30
#            chunk_limit_size 2M
#            queue_limit_length 32
#            overflow_action block
#        </buffer>
#     </match>
